// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from "./client";
import type {
  PostApiAuthLoginData,
  PostApiAuthLoginResponses,
  PostApiAuthRefreshData,
  PostApiAuthRefreshResponses,
  PostApiAuthRevokeData,
  PostApiAuthRevokeResponses,
  GetApiConsultantsData,
  GetApiConsultantsResponses,
  GetApiConsultantsByIdData,
  GetApiConsultantsByIdResponses,
  GetApiSkillsData,
  GetApiSkillsResponses,
  GetApiUsersData,
  GetApiUsersResponses,
  PostApiUsersData,
  PostApiUsersResponses,
  DeleteApiUsersByIdData,
  DeleteApiUsersByIdResponses,
  GetApiUsersByIdData,
  GetApiUsersByIdResponses,
  GetApiUsersCurrentData,
  GetApiUsersCurrentResponses,
  PutApiUsersCurrentData,
  PutApiUsersCurrentResponses,
} from "./types.gen";
import { client as _heyApiClient } from "./client.gen";

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

export const postApiAuthLogin = <ThrowOnError extends boolean = false>(
  options?: Options<PostApiAuthLoginData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).post<PostApiAuthLoginResponses, unknown, ThrowOnError>({
    url: "/api/Auth/login",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

export const postApiAuthRefresh = <ThrowOnError extends boolean = false>(
  options?: Options<PostApiAuthRefreshData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostApiAuthRefreshResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/Auth/refresh",
    ...options,
  });
};

/**
 * Invalidates the refresh token, effectively requiring for user to sign in again.
 */
export const postApiAuthRevoke = <ThrowOnError extends boolean = false>(
  options?: Options<PostApiAuthRevokeData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).post<PostApiAuthRevokeResponses, unknown, ThrowOnError>(
    {
      url: "/api/Auth/revoke",
      ...options,
    },
  );
};

export const getApiConsultants = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiConsultantsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<GetApiConsultantsResponses, unknown, ThrowOnError>({
    url: "/api/Consultants",
    ...options,
  });
};

export const getApiConsultantsById = <ThrowOnError extends boolean = false>(
  options: Options<GetApiConsultantsByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiConsultantsByIdResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/Consultants/{id}",
    ...options,
  });
};

export const getApiSkills = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiSkillsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<GetApiSkillsResponses, unknown, ThrowOnError>({
    url: "/api/Skills",
    ...options,
  });
};

export const getApiUsers = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiUsersData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<GetApiUsersResponses, unknown, ThrowOnError>({
    url: "/api/Users",
    ...options,
  });
};

export const postApiUsers = <ThrowOnError extends boolean = false>(
  options?: Options<PostApiUsersData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).post<PostApiUsersResponses, unknown, ThrowOnError>({
    url: "/api/Users",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

export const deleteApiUsersById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteApiUsersByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteApiUsersByIdResponses,
    unknown,
    ThrowOnError
  >({
    url: "/api/Users/{id}",
    ...options,
  });
};

export const getApiUsersById = <ThrowOnError extends boolean = false>(
  options: Options<GetApiUsersByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<GetApiUsersByIdResponses, unknown, ThrowOnError>({
    url: "/api/Users/{id}",
    ...options,
  });
};

export const getApiUsersCurrent = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiUsersCurrentData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<GetApiUsersCurrentResponses, unknown, ThrowOnError>(
    {
      url: "/api/Users/current",
      ...options,
    },
  );
};

export const putApiUsersCurrent = <ThrowOnError extends boolean = false>(
  options?: Options<PutApiUsersCurrentData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).put<PutApiUsersCurrentResponses, unknown, ThrowOnError>(
    {
      url: "/api/Users/current",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    },
  );
};
